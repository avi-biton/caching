name: System Test on Kind

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  system-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.9.0
        with:
          cluster_name: kind

      - name: Install Helm
        run: |
          curl https://get.helm.sh/helm-v3.14.0-linux-amd64.tar.gz | tar xz
          sudo mv linux-amd64/helm /usr/local/bin/helm

      - name: Build 
        run: |
          docker build -t konflux-ci/squid -f Containerfile .

      - name: Load image into Kind
        run: |
          kind load image-archive --name kind <(docker save localhost/konflux-ci/squid:latest)

      - name: Deploy applications to Kind
        run: |
          helm install squid ./squid

      - name: Wait for squid deployment
        run: |
          kubectl wait --for=condition=available --timeout=300s deployment/squid -n proxy

      - name: Test squid proxy functionality
        run: |
          # Wait for the service to be ready
          kubectl wait --for=condition=ready --timeout=60s pod -l app.kubernetes.io/name=squid -n proxy
          
          # Test proxy connectivity
          kubectl run test-client --image=curlimages/curl:latest --rm -i --restart=Never -- \
            sh -c 'curl --proxy http://squid.proxy.svc.cluster.local:3128 http://httpbin.org/ip'

      - name: Verify cert-manager deployment
        run: |
          # Wait for cert-manager to be ready
          kubectl wait --for=condition=available --timeout=300s deployment/cert-manager -n cert-manager
          kubectl wait --for=condition=available --timeout=300s deployment/cert-manager-webhook -n cert-manager
          kubectl wait --for=condition=available --timeout=300s deployment/cert-manager-cainjector -n cert-manager
