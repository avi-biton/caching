# Start from an official Fedora 42 image
FROM registry.fedoraproject.org/fedora:42

# DNF tuning from official Podman Containerfile for build robustness
RUN echo -e "\\n\\n# Added during image build" >> /etc/dnf/dnf.conf && \
    echo -e "minrate=100\\ntimeout=60\\n" >> /etc/dnf/dnf.conf

# Install dependencies for podman-in-podman and the dev environment
ARG INSTALL_RPMS="podman fuse-overlayfs openssh-clients cpp git-core golang which procps-ng curl helm"
RUN dnf -y makecache && \
    dnf -y update && \
    rpm --setcaps shadow-utils 2>/dev/null && \
    dnf -y install $INSTALL_RPMS --exclude container-selinux && \
    dnf clean all && \
    rm -rf /var/cache /var/log/dnf* /var/log/yum.*

# Install kind binary
RUN curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64 && \
    chmod +x ./kind && \
    mv ./kind /usr/local/bin/kind

# Create a non-root user 'vscode' to run as, and grant it passwordless sudo.
ARG USERNAME=vscode
ARG USER_UID=1000
ARG USER_GID=$USER_UID

RUN groupadd --gid $USER_GID $USERNAME && \
    useradd --uid $USER_UID --gid $USER_GID -m $USERNAME && \
    echo "root:1:65536" > /etc/subuid && \
    echo "root:1:65536" > /etc/subgid && \
    echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME && \
    chmod 0440 /etc/sudoers.d/$USERNAME

# Copy containers.conf
COPY containers.conf /etc/containers/containers.conf

# Create a login script to dynamically configure subordinate IDs for the user.
RUN cat <<'EOF' > /etc/profile.d/99-podman-subuid.sh
#!/bin/bash
if ! grep -q "^${USER}:" /etc/subuid; then
  echo "Configuring subordinate IDs for ${USER}..."
  CURRENT_UID=$(id -u)
  CURRENT_GID=$(id -g)
  sudo /bin/sh -c "echo '${USER}:1:$((${CURRENT_UID}-1))' >> /etc/subuid"
  sudo /bin/sh -c "echo '${USER}:$((${CURRENT_UID}+1)):$((65536 - ${CURRENT_UID} - 1))' >> /etc/subuid"
  sudo /bin/sh -c "echo '${USER}:1:$((${CURRENT_GID}-1))' >> /etc/subgid"
  sudo /bin/sh -c "echo '${USER}:$((${CURRENT_GID}+1)):$((65536 - ${CURRENT_GID} - 1))' >> /etc/subgid"
fi
EOF

# Configure system-wide storage for podman-in-podman
RUN sed -e 's|^#mount_program|mount_program|g' \
    -e '/additionalimage.\*/a "/var/lib/shared",' \
    -e 's|^mountopt\[\[:space:\]\]\*=.\*$|mountopt = "nodev,fsync=0"|g' \
    /usr/share/containers/storage.conf \
    > /etc/containers/storage.conf

# Setup volumes and shared storage for podman-in-podman
VOLUME /var/lib/containers
VOLUME /home/${USERNAME}/.local/share/containers
RUN mkdir -p /var/lib/shared/overlay-images \
    /var/lib/shared/overlay-layers \
    /var/lib/shared/vfs-images \
    /var/lib/shared/vfs-layers && \
    touch /var/lib/shared/overlay-images/images.lock && \
    touch /var/lib/shared/overlay-layers/layers.lock && \
    touch /var/lib/shared/vfs-images/images.lock && \
    touch /var/lib/shared/vfs-layers/layers.lock && \
    chown -R ${USERNAME}:${USERNAME} /home/${USERNAME}/.local

# Configure containers.conf for the rootless vscode user to use fuse-overlayfs.
RUN mkdir -p /home/${USERNAME}/.config/containers && \
    echo -e "[storage]\ndriver = \"overlay\"\nmount_program = \"/usr/bin/fuse-overlayfs\"" > /home/${USERNAME}/.config/containers/containers.conf && \
    chown -R ${USERNAME}:${USERNAME} /home/${USERNAME}/.config

# Set environment variables for podman-in-podman
ENV _CONTAINERS_USERNS_CONFIGURED="" \
    BUILDAH_ISOLATION=chroot

# Switch to the non-root user
USER $USERNAME